
/**
 * Write your model definitions here
 */

namespace model

/**
* Gender Ennumaration
 */
enum genderType {
  o MALE
  o FEMALE
}

/**
* Address Concept
 */

 concept Address {
  o String addressLine
  o String city optional
  o String state optional
  o String zipCode optional
  o String country optional
}

/**
* DrugConsumption Concept
 */

 concept DrugConsumption {
  o String mealTiming
  o String[] consumptionTiming
  o String quantity
}

/**
* Our Participants
 */
participant  Pharmacy identified by pharmacyId {
  o String pharmacyId
  o String name
  o Address address
  o String Emprunt
  o String phoneNumber
}

participant Practitioner identified by pratitionerId {
  o String pratitionerId
  o String firstName
  o String lastName
  o String email
  o String cin
  o String Emprunt
  o Address address
  o String phoneNumber
  o String speciality
  --> Prescription[] prescriptions optional
}

participant Patient identified by patientId {
  o String patientId
  o String photo
  o String Emprunt
  o String firstName
  o String lastName
  o genderType gender
  o DateTime dateOfBirth
  o String cin
  o Address address
  o String phone
  o String emergencyPhone
  o String email
  o String username		
  o String password
  o String occupation
  o String bloodType
  o Double height
  o Double weight
  o String[] minaccess optional
  o String[] fullaccess optional
  o Drug[] pharmacyDrugs optional
  o Drug[] practitionerDrugs optional
  --> PhysicalActivity[] physicalActivity optional
  --> Nutrition[] nutrition optional
  o MriResults[] mriResults optional
  o Allergies[] allergies optional
  o LabTestResults[] labTestResults optional
  o ChronicDiseases[] chronicDiseases optional
  o Prescription[] prescriptions optional
  o Consultation[] consultations optional
}
participant Admin identified by admintId {
  o String admintId
  o String firstName
  o String lastName
  o genderType gender optional
  o DateTime dateOfBirth optional
  o String cin optional
  o Address address optional
  o String phone optional
  o String email optional
  o String username		
  o String password

}

transaction PharmacyAddDrug {
  o Drug drug
  --> Patient patient
  --> Pharmacy pharmacy
}
transaction PharmacyAddDrugFromPrescription {
  --> Patient patient
  o String prescriptionId
}
transaction addNewDrug {
  o Drug drug
}

@returns(String[])
transaction verifyInteraction {
  o String drugName
  --> Patient patient
}
transaction addDrugToPrescription {
  --> Prescription prescription
  o Drug drug
}

transaction PractitionerAddDrug {
  o Drug drug
  --> Patient patient
  --> Practitioner practitioner
}
transaction PractitionerAddConsultation {
  o Consultation consultation
  --> Patient patient
  --> Practitioner practitioner
}
transaction PractitionerAddPrescription {
  o Prescription prescription
  --> Patient patient
  --> Practitioner practitioner
}

transaction PractitionerAddAllergie {
  o Allergies allergie
  --> Patient patient
  --> Practitioner practitioner
}
transaction PractitionerAddMri {
  o MriResults mri
  --> Patient patient
  --> Practitioner practitioner
}
transaction PractitionerAddLabRes {
  o LabTestResults labTestResults
  --> Patient patient
  --> Practitioner practitioner
}
transaction PractitionerAddChronicDisease {
  o ChronicDiseases chronicDisease
  --> Patient patient
  --> Practitioner practitioner
}

transaction PatientAddNutrition {
  o Nutrition nutrition
  --> Patient patient
}
transaction PatientAddPhysicalActivity {
  o PhysicalActivity physicalActivity
  --> Patient patient
}
/**
* Our Events
 */
event PrescriptionFinished {
  --> Patient patient
  o Prescription[] oldPrescriptions
  o Prescription[] newPrescriptions

}
event returnInteractionResponse {
  o String[] detail
}

event AddNewDrugSuccessfully {
  o String detail
}

event PharmacyAddDrugFinished {
  o String details
}
event PractitionerAddDrugFinished {
  o String details
}
event PractitionerAddConsultationFinished {
  o String details
}
event PractitionerAddAllergieFinished {
  o String details
}
event PractitionerAddMriFinished {
  o String details
}
event PractitionerAddLabResFinished {
  o String details
}
event PractitionerAddChronicDiseaseFinished {
  o String details
}
event PractitionerAddPrescriptionFinished {
  o String details
}

/**
* Our Assets
 */
asset PhysicalActivity identified by physicalId {
  o String physicalId
  o String type
  o String duration
}

asset Nutrition identified by nutritionId {
  o String nutritionId
  o String name
  o String type
  o Integer quantity
}
asset Drug identified by drugId {
  o String drugId
  o String name
  o String manufacturer
  o Double price
  o String lotNumber
  o DrugConsumption consumption optional

}

asset MriResults identified by mriId {
  o String mriId
  o String establishment
  o String reference
  o DateTime testDate
  --> Practitioner[] pratitioners optional
  --> Consultation consultation optional
}

asset Allergies identified by allergyId {
  o String allergyId
  o String name
  --> Practitioner practitioner
  o String treatmentBrief
}

asset LabTestResults identified by labTestResultId {
  o String labTestResultId
  o String establishment
  o DateTime testDate
  o String reference
  --> Practitioner[] pratitioners optional
  --> Consultation consultation optional

}

asset ChronicDiseases identified by chronicDiseasesId {
  o String chronicDiseasesId
  o String name
  o DateTime date
  o String notes
  --> Practitioner[] pratitioners optional

}

asset Prescription identified by prescriptionId {
  o String prescriptionId
  o DateTime prescriptionDate
  --> Drug[] drugs optional
}

asset Consultation identified by consultationId {
  o String consultationId
  o DateTime consultionDate
  o String reason
  o String output
  o String notes
  --> Practitioner practitioner
}

asset PharmacyDrugs identified by pharmacyDrugid {
  o String pharmacyDrugid
}
asset PractitionerDrugs identified by practitionerDrugs {
  o String practitionerDrugs
}
 

